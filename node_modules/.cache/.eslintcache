[{"/home/kumar/learning/src/index.js":"1","/home/kumar/learning/src/reportWebVitals.js":"2","/home/kumar/learning/src/App.js":"3","/home/kumar/learning/src/arrayMtds.jsx":"4","/home/kumar/learning/src/conditionChecking.js":"5","/home/kumar/coincap/src/index.js":"6","/home/kumar/coincap/src/App.js":"7","/home/kumar/coincap/src/reportWebVitals.js":"8","/home/kumar/coincap/src/components/header.jsx":"9","/home/kumar/coincap/src/components/dashboard.jsx":"10","/home/kumar/coincap/src/components/footer.jsx":"11","/home/kumar/coincap/src/actions/dashboardActions.js":"12","/home/kumar/coincap/src/actions/constants.js":"13","/home/kumar/coincap/src/store.js":"14","/home/kumar/coincap/src/reducers/rootReducer.js":"15"},{"size":500,"mtime":1625829944496,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1625829944496,"results":"18","hashOfConfig":"17"},{"size":242,"mtime":1626352932243,"results":"19","hashOfConfig":"17"},{"size":4259,"mtime":1626853795753,"results":"20","hashOfConfig":"17"},{"size":2255,"mtime":1626352924940,"results":"21","hashOfConfig":"17"},{"size":500,"mtime":1625829944496,"results":"22","hashOfConfig":"23"},{"size":441,"mtime":1626888707128,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1625829944496,"results":"25","hashOfConfig":"23"},{"size":1547,"mtime":1626886389112,"results":"26","hashOfConfig":"23"},{"size":7106,"mtime":1626918708954,"results":"27","hashOfConfig":"23"},{"size":3401,"mtime":1626888649121,"results":"28","hashOfConfig":"23"},{"size":352,"mtime":1626889599765,"results":"29","hashOfConfig":"23"},{"size":35,"mtime":1626867045372,"results":"30","hashOfConfig":"23"},{"size":212,"mtime":1626887951875,"results":"31","hashOfConfig":"23"},{"size":261,"mtime":1626867115864,"results":"32","hashOfConfig":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1mb3j33",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ruoc6t",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/kumar/learning/src/index.js",[],["68","69"],"/home/kumar/learning/src/reportWebVitals.js",[],"/home/kumar/learning/src/App.js",["70"],"import {ArrayMtds} from \"./arrayMtds\"\nimport { ConditionChecking } from \"./conditionChecking\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ArrayMtds/>\n      {/* <ConditionChecking/> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/kumar/learning/src/arrayMtds.jsx",["71","72"],"/home/kumar/learning/src/conditionChecking.js",["73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90"],"import React, { useState, useEffect } from \"react\"\n\nexport const ConditionChecking = () => {\n    const [status, setstatus] = useState(1)\n    useEffect(() => {\n        if (status === 1) {\n            console.log(x, y, \"1st console\")\n            var x = 10;\n            var y = 20;\n            console.log(x, y, \"2nd console\")\n            function getRes() {\n                console.log(x, y, \"3rd console\")\n                x = 20;\n                var y = 10;\n                console.log(x, y, \"4th console\")\n            }\n            getRes()\n        }\n        else if (status === 2) {\n            console.log(1 === \"1\", `1===\"1\", console 1`)\n            console.log(1 == \"1\", `1==\"1\", console 2`)\n            console.log(null == undefined, \"null==undefined , console 3\")\n            console.log(null === undefined, \"null===undefined, console 4\")\n            console.log({ a: 2 } == 2, \"{a:2}==2, console 5\")\n            console.log({ a: 2 } === 2, \"{a:2}===2, console 6\")\n            console.log({ a: 2 } == \"2\", `{a:2}==\"2\", console 7`)\n            console.log({ a: 2 } === \"2\", `{a:2}===\"2\", console 8`)\n            console.log({ a: 2 } == [{ a: 2 }], `{a:2}==[{a: 2}], console 9`)\n            console.log({ a: 2 } === [{ a: 2 }], `{a:2}===[{a: 2}], console 10`)\n            console.log({ a: 2 } == { a: 2 }, `{a:2}=={ a: 2 }, console 11`)\n            console.log({ a: 2 } === { a: 2 }, `{a:2}==={ a: 2 }, console 12`)\n            console.log([{ a: 2 }] === [{ a: 2 }], `[{a: 2}]===[{a: 2}], console 13`)\n            console.log([{ a: 2 }] === [{ a: 2 }], `[{a: 2}]===[{a: 2}], console 14`)\n            console.log([2] == 2, \"[2]==2 console 15\")\n            console.log([2] === 2, \"[2]===2 console 16\")\n            console.log([2] == \"2\", `[2]==\"2\" console 17`)\n            console.log([2] === \"2\", `[2]===\"2\" console 18`)\n            console.log(0 == -0, \"0 == -0, console 19\")\n            console.log(0 === -0, \"0 === -0, console 20\")\n            console.log(null == 0, \"null == 0, console 21\")\n            console.log(null === 0, \"null===0, console 22\")\n            console.log(undefined == 0, \"undefined == 0, console 23\")\n        }\n    }, [])\n\n    return (\n        <div>\n            kumar Madhu\n            Condition Checking\n        </div>\n    )\n}","/home/kumar/coincap/src/index.js",[],["91","92"],"/home/kumar/coincap/src/App.js",[],"/home/kumar/coincap/src/reportWebVitals.js",[],"/home/kumar/coincap/src/components/header.jsx",[],"/home/kumar/coincap/src/components/dashboard.jsx",["93","94","95","96","97"],"import React, { useEffect, useState } from \"react\";\nimport Container from '@material-ui/core/Container';\nimport { Grid } from \"@material-ui/core\";\nimport \"../css/dashboard.css\";\nimport { connect } from 'react-redux';\nimport { getData } from '../actions/dashboardActions';\nimport Button from '@material-ui/core/Button';\n\nconst Dashboard = (props) => {\n    const [list, setList] = useState([])\n    useEffect(() => {\n        props.getData()\n    }, [])\n\n    useEffect(() => {\n        if (props.list != undefined) {\n            if (props.list.length) {\n                if (props.list.length > 50) {\n                    setList(props.list.slice(0, 50))\n                }\n                else {\n                    setList(props.list)\n                }\n            }\n        }\n    }, [props.list])\n\n    const getPrice = (p) => {\n        let value = parseFloat(p).toFixed(2)\n        let Value = new Intl.NumberFormat('en-IN', {\n            style: 'decimal',\n            currency: 'INR'\n        }).format(value)\n        return Value;\n    }\n\n    const getCap = (p) => {\n        let value = parseFloat(p / 1000000000).toFixed(2)\n        let Value = new Intl.NumberFormat('en-IN', {\n            style: 'decimal',\n            currency: 'INR'\n        }).format(value)\n        return Value;\n    }\n\n    const getSupply = (p) => {\n        let value = parseFloat(p / 1000000).toFixed(2)\n        let Value = new Intl.NumberFormat('en-IN', {\n            style: 'decimal',\n            currency: 'INR'\n        }).format(value)\n        return Value;\n    }\n\n    const getImg = (i) => {\n        let imgUrl = `https://assets.coincap.io/assets/icons/${i.toLowerCase()}@2x.png`\n        return imgUrl;\n    }\n\n    const onViewMore = () => {\n        if (props.list != undefined) {\n            let no = list.length + 50\n            if (no < props.list.length) {\n                setList(props.list.splice(0, no))\n            }\n            else {\n                setList(props.list)\n            }\n        }\n    }\n\n    return (\n        <div className=\"dashboard_container\">\n            <div className=\"dashboard_main_con\">\n                <Container maxWidth=\"lg\">\n                    <Grid container spacing={4}>\n                        <Grid className=\"grid_main\" item xs={4} sm={4} md={2} lg={2} xl={2}>\n                            <div className=\"main_txt\">MARKET CAP</div>\n                            <div className=\"main_value\">$1.33T</div>\n                        </Grid>\n                        <Grid className=\"grid_main\" item xs={4} sm={4} md={2} lg={2} xl={2}>\n                            <div className=\"main_txt\">EXCHANGE VOL</div>\n                            <div className=\"main_value\">$93.65B</div>\n                        </Grid>\n                        <Grid className=\"grid_main\" item xs={4} sm={4} md={2} lg={2} xl={2}>\n                            <div className=\"main_txt\">ASSETS</div>\n                            <div className=\"main_value\">2,118</div>\n                        </Grid>\n                        <Grid className=\"grid_main\" item xs={4} sm={4} md={2} lg={2} xl={2}>\n                            <div className=\"main_txt\">EXCHANGES</div>\n                            <div className=\"main_value\">78</div>\n                        </Grid>\n                        <Grid className=\"grid_main\" item xs={4} sm={4} md={2} lg={2} xl={2}>\n                            <div className=\"main_txt\">MARKETS</div>\n                            <div className=\"main_value\">13,314</div>\n                        </Grid>\n                        <Grid className=\"grid_main\" item xs={4} sm={4} md={2} lg={2} xl={2}>\n                            <div className=\"main_txt\">BTC DOM INDEX</div>\n                            <div className=\"main_value\">45.4%</div>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n            <div className=\"table_container\">\n                <Container maxWidth=\"lg\">\n                    <div className=\"table\">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th className=\"center\">Rank</th>\n                                    <th className=\"start\">Name</th>\n                                    <th className=\"end\">Price</th>\n                                    <th className=\"end\">Market Cap</th>\n                                    <th className=\"end\">VWAP (24Hr)</th>\n                                    <th className=\"end\">Supply</th>\n                                    <th className=\"end\">Volume (24Hr)\t</th>\n                                    <th className=\"end\">Change (24Hr)</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {list != undefined && list.map(res =>\n                                    <tr key={res.rank}>\n                                        <td className=\"center\">{res.rank}</td>\n                                        <td className=\"start\">\n                                            <div className=\"name_con\">\n                                                <img src={getImg(res.symbol)} alt=\"img\" />\n                                                <div className=\"name_txt\">\n                                                    <div className=\"name\">{res.name}</div>\n                                                    <div className=\"symbol\">{res.symbol}</div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td className=\"end\">${getPrice(res.priceUsd)}</td>\n                                        <td className=\"end\">${getCap(res.marketCapUsd)}b</td>\n                                        <td className=\"end\">${getPrice(res.vwap24Hr)}</td>\n                                        <td className=\"end\">${getSupply(res.supply)}m</td>\n                                        <td className=\"end\">${getCap(res.volumeUsd24Hr)}b</td>\n                                        <td className={res.changePercent24Hr.includes(\"-\")?\"red end\":\"green end\"}>\n                                            {getPrice(res.changePercent24Hr)}%\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </Container>\n            </div>\n            {props.list != undefined ? list.length < props.list.length ?\n                <div className=\"view_btn\">\n                    <Button onClick={onViewMore} variant=\"contained\" className=\"btn_container\">\n                        <div className=\"btn_txt\">View More</div>\n                    </Button>\n                </div> : null : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    list: state.list\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getData: () => dispatch(getData())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","/home/kumar/coincap/src/components/footer.jsx",[],"/home/kumar/coincap/src/actions/dashboardActions.js",[],"/home/kumar/coincap/src/actions/constants.js",[],"/home/kumar/coincap/src/store.js",[],"/home/kumar/coincap/src/reducers/rootReducer.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":27},{"ruleId":"102","severity":1,"message":"106","line":4,"column":20,"nodeType":"104","messageId":"105","endLine":4,"endColumn":29},{"ruleId":"107","severity":1,"message":"108","line":106,"column":8,"nodeType":"109","endLine":106,"endColumn":10,"suggestions":"110"},{"ruleId":"102","severity":1,"message":"106","line":4,"column":20,"nodeType":"104","messageId":"105","endLine":4,"endColumn":29},{"ruleId":"111","severity":1,"message":"112","line":7,"column":25,"nodeType":"104","messageId":"113","endLine":7,"endColumn":26},{"ruleId":"111","severity":1,"message":"114","line":7,"column":28,"nodeType":"104","messageId":"113","endLine":7,"endColumn":29},{"ruleId":"111","severity":1,"message":"114","line":12,"column":32,"nodeType":"104","messageId":"113","endLine":12,"endColumn":33},{"ruleId":"115","severity":1,"message":"116","line":21,"column":27,"nodeType":"117","messageId":"118","endLine":21,"endColumn":29},{"ruleId":"115","severity":1,"message":"116","line":24,"column":34,"nodeType":"117","messageId":"118","endLine":24,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":26,"column":34,"nodeType":"117","messageId":"118","endLine":26,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":28,"column":34,"nodeType":"117","messageId":"118","endLine":28,"endColumn":36},{"ruleId":"119","severity":1,"message":"120","line":30,"column":25,"nodeType":"117","messageId":"121","endLine":30,"endColumn":45},{"ruleId":"115","severity":1,"message":"116","line":30,"column":34,"nodeType":"117","messageId":"118","endLine":30,"endColumn":36},{"ruleId":"119","severity":1,"message":"120","line":31,"column":25,"nodeType":"117","messageId":"121","endLine":31,"endColumn":46},{"ruleId":"119","severity":1,"message":"120","line":32,"column":25,"nodeType":"117","messageId":"121","endLine":32,"endColumn":50},{"ruleId":"119","severity":1,"message":"120","line":33,"column":25,"nodeType":"117","messageId":"121","endLine":33,"endColumn":50},{"ruleId":"115","severity":1,"message":"116","line":34,"column":29,"nodeType":"117","messageId":"118","endLine":34,"endColumn":31},{"ruleId":"115","severity":1,"message":"116","line":36,"column":29,"nodeType":"117","messageId":"118","endLine":36,"endColumn":31},{"ruleId":"115","severity":1,"message":"116","line":38,"column":27,"nodeType":"117","messageId":"118","endLine":38,"endColumn":29},{"ruleId":"115","severity":1,"message":"116","line":42,"column":35,"nodeType":"117","messageId":"118","endLine":42,"endColumn":37},{"ruleId":"107","severity":1,"message":"108","line":44,"column":8,"nodeType":"109","endLine":44,"endColumn":10,"suggestions":"122"},{"ruleId":"98","replacedBy":"123"},{"ruleId":"100","replacedBy":"124"},{"ruleId":"107","severity":1,"message":"125","line":13,"column":8,"nodeType":"109","endLine":13,"endColumn":10,"suggestions":"126"},{"ruleId":"115","severity":1,"message":"127","line":16,"column":24,"nodeType":"117","messageId":"118","endLine":16,"endColumn":26},{"ruleId":"115","severity":1,"message":"127","line":61,"column":24,"nodeType":"117","messageId":"118","endLine":61,"endColumn":26},{"ruleId":"115","severity":1,"message":"127","line":121,"column":39,"nodeType":"117","messageId":"118","endLine":121,"endColumn":41},{"ruleId":"115","severity":1,"message":"127","line":148,"column":25,"nodeType":"117","messageId":"118","endLine":148,"endColumn":27},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'ConditionChecking' is defined but never used.","Identifier","unusedVar","'setstatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.","ArrayExpression",["130"],"no-use-before-define","'x' was used before it was defined.","usedBeforeDefined","'y' was used before it was defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf",["131"],["128"],["129"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["132"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"133","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [status]",{"range":"138","text":"139"},{"range":"140","text":"139"},"Update the dependencies array to be: [props]",{"range":"141","text":"142"},[4156,4158],"[status]",[2146,2148],[445,447],"[props]"]